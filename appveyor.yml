environment:
  PYPI_PASSWORD:
    secure: 65W0nlxk4YHmU5dqtk5DXg==
  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

    - PYTHON: "C:\\Python27-x64"
      MINICONDA: "C:\\Miniconda"
    - PYTHON: "C:\\Python35-x64"
      MINICONDA: "C:\\Miniconda"
    - PYTHON: "C:\\Python36-x64"
      MINICONDA: "C:\\Miniconda"
    - PYTHON: "C:\\Python37-x64"
      MINICONDA: "C:\\Miniconda"

install:
  # We need wheel installed to build wheels
  - "SET PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - "%PYTHON%\\python.exe -m pip install wheel"
  - "%PYTHON%\\python.exe -m pip install -r requirements.txt"
  - "set PATH=%PATH%;C:\"%PYTHON%\\Scripts"

build: off

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  - "%PYTHON%\\python.exe setup.py test"

deploy:
  provider: pypi
  user: arm61
  password:
    secure: H3MJUkqxOMJ4lUgLc6m3dOokuv2xCzlVewcH4fUj7e/F8i/7bmk0kiFqorXfsgP42rjW9QyHqABfIjJN50ait2iaUIx3MQA8LW4DP+jTsNh/f4FyvslF3gRZwK6HOV1LQ3GxNVMU4xb5SgzPkVj9ZI4AbxPRKqhMKD3dxbuZD8d34lV9JZQNHGW7Ib81pIeo6aJlzQX1ei1QtTApuCe0TKKList8+mtEoASxKSDsehiPR0fFGVIUClIBGjy3lF8vXpYEAXAPfucBPUWsuqapgc9rB5awbkK5VCKCqdTVRactY57KgFlYU5m5twj5QQ17wEFN3Cio5ToL3WvgyOb8ZtXo6vDZUv8bnF9XbwK3ZmmGZOFYTuE8PgAvmDH6oYUfdm23KszvYwj1jQndu6MYnZeXYestv6iti8qZ8nPjJ79aytS4zr78tMCRP3CMHiGS1St8/0v2NPCbmKuSIbLtpV+sbXLEAxfsdT6kLR7RzWTUgzunA8B5lOr3BmPQxCLEF8dfkh4+h11Pj2KqUSIEzE03W2DBQLfuF8Huk0OLwg/CPPB53GVRi+t7sKB76UUX0OmYfOq/Zyqpr83+TtfCH4EG4Pkk4Ibifg6n0GT2fT8RWuEy3/2NeXA3a7mA9x4L0gjn9libpxbdx5nrpBJ430wDxQ0UNfNnzNkitxCHdvA=
  on:
    distributions: bdist_wheel
    branch: master
    repo: arm61/pylj


artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
